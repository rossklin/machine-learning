* ideas
** Template structure
*** Must create an abstract agent class so refbot and agent can run in the same game
*** Thus, we can go back to using a generic agent_ptr instead of all the local defs
** tree evaluator
*** store derivative of output with respect to each sub-tree result in each iteration
    Sub-trees with high variance or just high derivatives should be
    more relevant, now you can prefer trimming less relevant sub-trees and
    use more relevant sub-trees in mating.
** evolution algorithm
*** avoid keeping a large share of agents from the same "family"
